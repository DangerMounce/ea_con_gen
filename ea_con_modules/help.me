Help
Version 16.1

ðŸ‘€ Overview

ea_con_gen is a JavaScript app that facilitates the import/creation of calls and tickets to send to 
evaluagentCX using the evaluagent API.

ðŸ¤“ How to use

API keys are required to send contracts to an evaluagent instance.

**ADDING AN API KEY**

When in the root directory, type:
node gen add [CONTRACT_NAME] [API_KEY] - no spaces in contract name or api key.

This will add the contract name and key to the keyFile.

**ADDING CONTACTS FROM LIBRARY**
When in the root, type:
node gen contacts

ea_con_gen syncs with an online repositary of example calls and tickets. Each time
an update is available, you will be prompted if you would like to update.

Select the evaluagent cluster the contract is located on.
Select the contract from the list of contracts saved in the keyFile.
Select the type of contact (either calls, tickets, or a combination of both)
Select the number of contacts.
If the number of contacts is more than one, enter the time delay between sending each 
contact.

**IMPORT CONVERSATIONS FROM IMPORT FOLDER**
Tickets: CSV files, in the same format as sample.CSV located in the root directory can be uploaded
to evaluagentCX.  Conversation details and metadata for a single conversation should be added 
to one CSV file.  Any CSV file added to the import_tickets directory can be uploaded in a queue.

Calls: Any audio file located in the import_calls folder will be uploaded in the same way.  For any
custom metadata, this should be added in the CSV file with the same name as the audio file.

When in the root, type:
node gen import

Select cluster, contract and then conversation type.
The number of files help in the import folders will be displayed next to the conversation type.  Select
the type of conversation to be uploaded.

You will then be required to review all the contents of the files to ensure they're accurate before sending
to evaluagentCX.

**VIEWING THE CHANGELOG**
To view the current changelog, in the root directory, type:
node gen changelog 

!! Troubleshooting
Most errors will be related to either the keyFile being empty or the related converastion folders being empty.

In the event that the script cannot run, a fresh installation can be forced by typing:

node force 

